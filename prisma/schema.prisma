generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Address {
    state    String @id
    zone     String
    district String
    kebele   String
    site     Site
}

model DonatesTo {
    donor                  Int
    group                  Int
    donor_donatestoTodonor Donor          @relation(fields: [donor], references: [id])
    groupoforphans         GroupOfOrphans @relation(fields: [group], references: [id])

    @@id([group, donor])
    @@index([donor], name: "donor")
}

model Donor {
    id                           Int         @id
    companyName                  String
    typeOfsupport                String?
    initialDonationAmount        Float?
    initialReportPreparationDate DateTime?
    finalReportPreparationDate   DateTime?
    initialDataCollectionDate    DateTime?
    finalDataCollectionDate      DateTime?
    reportDueDate                DateTime?
    donatesto                    DonatesTo[]
    @@map("donor")
}

model Education {
    id               Int                        @id
    enrollmentStatus education_enrollmentStatus
    schoolName       String?
    typeOfSchool     education_typeOfSchool?
    grade            String?
    reason           String?
    hobbies          String?
    orphans          Orphan[]
    @@map("education")
}

model Father {
    id            Int      @id
    dateOfDeath   DateTime
    causeOfDeath  String
    job           String?
    monthlyIncome Int
    dateOfBirth   DateTime
    orphans       Orphan[]
    @@map("father")
}

model GroupOfOrphans {
    id                        Int              @id
    registrationDate          DateTime
    site                      Int
    site_groupoforphansTosite Site             @relation(fields: [site], references: [id])
    donatesto                 DonatesTo[]
    orphans                   Orphan[]
    responsiblefor            ResponsibleFor[]

    @@index([site], name: "site")
    @@map("groupoforphans")
}

model Guardian {
    id               Int      @id
    firstName        String
    middleName       String
    lastName         String
    gender           String
    nationality      String
    state            String
    zone             String
    district         String
    kebele           String
    relationToOrphan String
    email            String
    job              String?
    age              Int
    orphans          Orphan[]
    @@map("guardian")
}

model Iga_property {
    id              Int     @id
    ownershipStatus String
    otherProperty   String?
    orphan          Orphan
    @@map("iga_property")
}

model Mother {
    id             Int       @id
    firstName      String
    middleName     String
    lastName       String
    dateOfBirth    DateTime
    phoneNumber    Int
    job            Int
    maritalStatus  String
    vitalStatus    String
    monthlyExpense Float
    motherjob      Motherjob @relation(fields: [job], references: [id])
    orphans        Orphan[]

    @@index([job], name: "job")
    @@map("mother")
}

model Motherjob {
    id              Int     @id
    currentJobTitle String?
    monthlyIncome   Float?
    mother          Mother
    @@map("motherjob")
}

model Orphan {
    id                              Int            @id
    firstName                       String
    fatherName                      String
    grandFatherName                 String
    greatGrandFatherName            String
    gender                          orphan_gender
    placeOfBirth                    String
    dateOfBirth                     DateTime
    numberOfSponserdSiblings        Int
    physicalHealthStatus            String
    psychologicalHealthStatus       String
    otherHealthIssues               String
    photoPortraitUrl                String
    photoLongUrl                    String
    father                          Int
    mother                          Int
    guardian                        Int
    group                           Int
    sibling                         Int
    IGA_Property                    Int
    education                       Int
    iga_property                    Iga_property   @relation(fields: [IGA_Property], references: [id])
    education_educationToorphan     Education      @relation(fields: [education], references: [id])
    father_fatherToorphan           Father         @relation(fields: [father], references: [id])
    groupoforphans                  GroupOfOrphans @relation(fields: [group], references: [id])
    guardian_guardianToorphan       Guardian       @relation(fields: [guardian], references: [id])
    mother_motherToorphan           Mother         @relation(fields: [mother], references: [id])
    sibling_orphan_siblingTosibling Sibling        @relation("orphan_siblingTosibling", fields: [sibling], references: [id])

    @@index([IGA_Property], name: "IGA_Property")
    @@index([education], name: "education")
    @@index([father], name: "father")
    @@index([group], name: "group")
    @@index([guardian], name: "guardian")
    @@index([mother], name: "mother")
    @@index([sibling], name: "sibling")
    @@map("orphan")
}

model ResponsibleFor {
    GroupOfOrphans Int
    SocialWorker   Int
    groupoforphans GroupOfOrphans @relation(fields: [GroupOfOrphans], references: [id])
    socialworker   SocialWorker   @relation(fields: [SocialWorker], references: [id])

    @@id([GroupOfOrphans, SocialWorker])
    @@index([SocialWorker], name: "SocialWorker")
    @@map("responsiblefor")
}

model Sibling {
    id            Int     @id
    fullName      String
    gender        String
    age           Int
    schoolGrade   String?
    job           String?
    maritalStatus String
    orphan        Orphan  @relation("orphan_siblingTosibling")
    @@map("sibling")
}

model Site {
    id                    Int              @id
    siteName              String
    donationAmount        Int
    Address               String
    Address_AddressTosite Address          @relation(fields: [Address], references: [state])
    groupsoforphans       GroupOfOrphans[]
    socialworkers         SocialWorker[]

    @@index([Address], name: "Address")
}

model SocialWorker {
    id                      Int              @id
    fullName                String
    phoneNumber             Int
    site                    Int
    site_siteTosocialworker Site             @relation(fields: [site], references: [id])
    responsiblefor          ResponsibleFor[]

    @@index([site], name: "site")
    @@map("socialworker")
}

enum education_enrollmentStatus {
    enrolled
    unenrolled
    droppedout
}

enum education_typeOfSchool {
    private
    public
}

enum orphan_gender {
    M
    F
}
