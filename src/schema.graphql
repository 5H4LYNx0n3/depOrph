scalar DateTime

type Query {
  orphan(id: ID!): Orphan!
  iga_property(id: ID!): Iga_property!
  education(id: ID!): Education!
  father(id: ID!): Father!
  sibling(id: ID!): Sibling!
  guardian(id: ID!): Guardian!
  motherJob(id: ID!): MotherJob!
  mother(id: ID!): Mother!
  donor(id: ID!): Donor!
  socialWorker(id: ID!): SocialWorker!
  registeredGroup(id: ID!): RegisteredGroup!
  sponsoredGroup(id: ID!): SponsoredGroup!
  officialDocuments(id: ID!): OfficialDocuments!
  support(id: ID!): Support!
  educationalSupport(id: ID!): EducationalSupport!
  financialSupport(id: ID!): FinancialSupport!
  otherSupport(id: ID!): OtherSupport!
}

type Mutation {
  createOrphan(
    firstName: String!
    fatherName: String!
    grandFatherName: String!
    greatGrandFatherName: String!
    gender: orphanGender!
    placeOfBirth: String!
    dateOfBirth: DateTime!
    numberOfSponserdSiblings: Int!
    physicalHealthStatus: String!
    psychologicalHealthStatus: String!
    otherHealthIssues: String
    iga_property: ID
    officialDocuments: ID
    education: ID
    father: ID
    guardian: ID
    mother: ID
    registeredgroup: ID
    sponsoredgroup: ID
    siblings: [ID]
  ): Orphan!

  createIga_property(
    ownershipStatus: String!
    otherProperty: String
    orphan: ID
  ): Iga_property!
  
  createEducation(
    enrollmentStatus: educationEnrollmentStatus!
    schoolName: String
    typeOfSchool: educationTypeOfSchool
    grade: String
    reason: String
    hobbies: String
    orphan: ID

  ): Education!

  createFather(
    dateOfDeath: DateTime!
    causeOfDeath: String
    job: String
    monthlyIncome: Int
    dateOfBirth: DateTime!
    orphans: [ID]
  ): Father!
  
  createSibling(
    fullName: String!
    gender: String!
    age: Int!
    schoolGrade: String
    job: String
    maritalStatus: String!
  ): Sibling!

  createGuardian(
    firstName: String!
    middleName: String!
    lastName: String!
    gender: String!
    nationality: String!
    state: String!
    zone: String!
    district: String!
    kebele: String!
    relationToOrphan: String!
    email: String!
    job: String
    age: Int
  ): Guardian!

  createMotherJob(
    currentJobTitle: String
    monthlyIncome: String
  ): MotherJob!

  createMother(
    firstName: String!
    middleName: String!
    lastName: String!
    dateOfBirth: DateTime!
    phoneNumber: String!
    maritalStatus: String!
    vitalStatus: String!
    monthlyExpense: Float!
  ): Mother!

  createOfficialDocuments(
    photoPortraitUrl: String!
    photoLongUrl: String!
    fatherDeathCertificateUrl: String!
    birthCertificateUrl: String!
    guardianIDCardUrl: String!
    guardianConfirmationLetterUrl: String!
  ): OfficialDocuments!

  createDonor(
    companyName: String
    initialReportPreparationDate: DateTime
    finalReportPreparationDate: DateTime
    initialDataCollectionDate: DateTime
    finalDataCollectionDate: DateTime
    reportDueDate: DateTime
  ): Donor!

  createSocialWorker(
    fullName: String!
    phoneNumber: String!
    email: String!
    sponsoredgroup: ID
  ): SocialWorker!

  createRegisteredGroup(
    registrationDate: DateTime!
    siteName: String!
    state: String!
    zone: String!
    district: String!
    kebele: String
  ): RegisteredGroup!

  createSponsoredGroup(
    sponsorshipDate: DateTime!
    donor: ID
    support: ID
    socialworkers: [ID]
  ): SponsoredGroup!

  createSupport(
    status: String!
    sponsoredgroup: ID
  ): Support!

  # createFinalcialSupport(
  #   financialSupport: FinancialSupportInput!
  # ): FinancialSupport!

  # createEducationalSupport(
  #   educationalSupport: EducationalSupportInput!
  # ): EducationalSupport!

  # createOtherSupport(
  #   otherSupport: OtherSupportInput!
  # ): OtherSupport!
}

type Iga_property {
  id: ID!
  ownershipStatus: String!
  otherProperty: String
  orphan: Orphan
}

type Education {
  id: ID!
  enrollmentStatus: educationEnrollmentStatus!
  schoolName: String
  typeOfSchool: educationTypeOfSchool
  grade: String
  reason: String
  hobbies: String
  orphan: Orphan
}

type Father {
  id: ID!
  dateOfDeath: DateTime
  causeOfDeath: String
  job: String
  monthlyIncome: Int
  dateOfBirth: DateTime
  orphans: [Orphan]
}

type SocialWorker {
  id: ID!
  fullName: String!
  phoneNumber: String!
  email: String!
  sponsoredgroup: SponsoredGroup
}

type Donor {
  id: ID!
  companyName: String
  initialReportPreparationDate: DateTime
  finalReportPreparationDate: DateTime
  initialDataCollectionDate: DateTime
  finalDataCollectionDate: DateTime
  reportDueDate: DateTime
  sponsoredgroup: SponsoredGroup
}

type EducationalSupport {
  id: ID!
  support: Support
}

type FinancialSupport {
  id: ID!
  support: Support
}

type OtherSupport {
  id: ID!
  support: Support
}

type Support {
  id: ID!
  status: String!
  educationalsupport: EducationalSupport
  financialsupport: FinancialSupport
  othersupport: OtherSupport
  sponsoredgroup: SponsoredGroup
}

type RegisteredGroup {
  id: ID!
  registrationDate: DateTime!
  siteName: String!
  state: String!
  zone: String!
  district: String!
  kebele: String!
  orphans: [Orphan]
}

type SponsoredGroup {
  id: ID!
  sponsorshipDate: DateTime!
  donor: Donor
  socialworkers: [SocialWorker]
  support: Support
  orphans: [Orphan]
}

type OfficialDocuments {
  id: ID!
  photoPortraitUrl: String!
  photoLongUrl: String!
  fatherDeathCertificateUrl: String!
  birthCertificateUrl: String!
  guardianIDCardUrl: String!
  guardianConfirmationLetterUrl: String!
  orphan: [Orphan]
}

type Guardian {
  id: ID!
  firstName: String!
  middleName: String!
  lastName: String!
  gender: String!
  nationality: String!
  state: String!
  zone: String!
  district: String!
  kebele: String!
  relationToOrphan: String!
  email: String!
  job: String
  age: Int
  orphans: [Orphan]
}

type MotherJob {
  id: ID!
  currentJobTitle: String
  monthlyIncome: String
  mother: Mother
}

type Mother {
  id: ID!
  firstName: String!
  middleName: String!
  lastName: String!
  dateOfBirth: DateTime!
  phoneNumber: String!
  maritalStatus: String!
  vitalStatus: String!
  monthlyExpense: Float!
  motherjob: MotherJob
  orphans: [Orphan]
}

type Sibling {
  id: ID!
  fullName: String!
  gender: String!
  age: Int!
  schoolGrade: String
  job: String
  maritalStatus: String
  orphan: Orphan
}

type Orphan {
  id: ID!
  firstName: String!
  fatherName: String!
  grandFatherName: String!
  greatGrandFatherName: String!
  gender: orphanGender!
  placeOfBirth: String!
  dateOfBirth: DateTime!
  numberOfSponserdSiblings: Int!
  physicalHealthStatus: String!
  psychologicalHealthStatus: String!
  otherHealthIssues: String!
  iga_property: Iga_property
  officialdocuments: OfficialDocuments
  education: Education
  father: Father
  guardian: Guardian
  mother: Mother
  registeredgroup: RegisteredGroup
  sponsoredgroup: SponsoredGroup
  siblings: [Sibling]
}

enum orphanGender {
  M
  F
}

enum educationEnrollmentStatus {
  enrolled
  unenrolled
  droppedout
}

enum educationTypeOfSchool {
  private
  public
}

input OrphanInput {
  firstName: String!
  fatherName: String!
  grandFatherName: String!
  greatGrandFatherName: String!
  gender: orphanGender!
  placeOfBirth: String!
  dateOfBirth: DateTime!
  numberOfSponserdSiblings: Int!
  physicalHealthStatus: String!
  psychologicalHealthStatus: String!
  otherHealthIssues: String
}

input Iga_propertyInput {
  ownershipStatus: String!
  otherProperty: String
}

input EducationInput {
  enrollmentStatus: educationEnrollmentStatus!
  schoolName: String
  typeOfSchool: educationTypeOfSchool
  grade: String
  reason: String
  hobbies: String
}

input FatherInput {
  dateOfDeath: DateTime!
  causeOfDeath: String
  job: String
  monthlyIncome: Int
  dateOfBirth: DateTime!
}

input DonorInput {
  companyName: String
  initialReportPreparationDate: DateTime
  finalReportPreparationDate: DateTime
  initialDataCollectionDate: DateTime
  finalDataCollectionDate: DateTime
  reportDueDate: DateTime
}

input SocialWorkerInput {
  fullName: String!
  phoneNumber: String!
  email: String!
}

input GuardianInput {
  firstName: String!
  middleName: String!
  lastName: String!
  gender: String!
  nationality: String!
  state: String!
  zone: String!
  district: String!
  kebele: String!
  relationToOrphan: String!
  email: String!
  job: String
  age: Int
}

input MotherInput {
  firstName: String!
  middleName: String!
  lastName: String!
  dateOfBirth: DateTime!
  phoneNumber: String!
  maritalStatus: String!
  vitalStatus: String!
  monthlyExpense: Float!
}

input MotherJobInput {
  currentJobTitle: String
  monthlyIncome: String
}

input SiblingInput {
  fullName: String!
  gender: String!
  age: Int!
  schoolGrade: String
  job: String
  maritalStatus: String
}

input OfficialDocumentsInput {
  photoPortraitUrl: String!
  photoLongUrl: String!
  fatherDeathCertificateUrl: String!
  birthCertificateUrl: String!
  guardianIDCardUrl: String!
  guardianConfirmationLetterUrl: String!
}

input RegisteredGroupInput {
  registrationDate: DateTime!
  siteName: String!
  state: String!
  zone: String!
  district: String!
  kebele: String
}

input SponsoredGroupInput {
  sponsorshipDate: DateTime!
}

input SupportInput {
  status: String!
}

# input FinancialSupportInput{
#   # TODO: CHECK WITH COMPANY
# }

# input FinancialSupportInput {
#   # TODO: CHECK WITH COMPANY
# }

# input OtherSupportInput {
#   # TODO: CHECK WITH COMPANY
# }