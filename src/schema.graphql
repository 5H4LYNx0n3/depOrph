scalar DateTime

type Query {
  orphan(id: ID!): Orphan!
  iga_property(id: ID!): Iga_property!
  education(id: ID!): Education!
  father(id: ID!): Father!
  sibling(id: ID!): Sibling!
  guardian(id: ID!): Guardian!
  motherJob(id: ID!): MotherJob!
  mother(id: ID!): Mother!
  donor(id: ID!): Donor!
  socialWorker(id: ID!): SocialWorker!
  site(id: ID!): Site!
  sponsoredGroup(id: ID!): SponsoredGroup!
  officialDocuments(id: ID!): OfficialDocuments!
  support(id: ID!): Support!
  educationalSupport(id: ID!): EducationalSupport!
  financialSupport(id: ID!): FinancialSupport!
  otherSupport(id: ID!): OtherSupport!
}

type Mutation {
  createOrphan(
    firstName: String!
    fatherName: String!
    grandFatherName: String!
    greatGrandFatherName: String!
    gender: orphanGender!
    placeOfBirth: String!
    dateOfBirth: DateTime!
    clan: String
    spokenLanguages: String
    numberOfSponserdSiblings: Int!
    physicalHealthStatus: String!
    psychologicalHealthStatus: String!
    otherHealthIssues: String
    hobbies: String
    sponsorshipStatus: orphanSponsorshipStatus
    sponsoredDate: DateTime
    iga_property: ID
    officialdocuments: ID
    education: ID
    father: ID
    guardian: ID
    mother: ID
    donor: ID
    site: ID
    sponsoredgroup: ID
    siblings: [ID]
  ): Orphan!

  createIga_property(
    ownershipStatus: String!
    otherProperty: String
    orphan: ID
  ): Iga_property!
  
  createEducation(
    enrollmentStatus: educationEnrollmentStatus!
    schoolName: String
    typeOfSchool: educationTypeOfSchool
    year: String
    level: educationLevel
    reason: String
    orphan: ID

  ): Education!

  createFather(
    dateOfDeath: DateTime!
    causeOfDeath: String
    job: String
    monthlyIncome: Int
    dateOfBirth: DateTime!
    deathCertificateUrl: String!
    orphans: [ID]
  ): Father!
  
  createSibling(
    fullName: String!
    gender: String!
    age: Int!
    schoolGrade: String
    job: String
    maritalStatus: String!
    orphan: ID
  ): Sibling!

  createGuardian(
    firstName: String!
    middleName: String!
    lastName: String!
    gender: guardianGender!
    nationality: String!
    state: String!
    zone: String!
    district: String!
    kebele: String!
    relationToOrphan: guardianRelationToOrphan!
    telephone: String
    mobile: String!
    POBox: String
    email: String!
    job: String
    dateOfBirth: DateTime!
    monthlyExpense: Float!
    guardianIDCardUrl: String! 
    guardianConfirmationLetterUrl: String!
    orphans: [ID]
  ): Guardian!

  createMotherJob(
    currentJobTitle: String
    monthlyIncome: Float
    initDate: DateTime
    termDate: DateTime
    mother: ID
  ): MotherJob!

  createMother(
    firstName: String!
    middleName: String!
    lastName: String!
    dateOfBirth: DateTime!
    dateOfDeath: DateTime
    causeOfDeath: String
    phoneNumber: String!
    maritalStatus: motherMaritalStatus!
    vitalStatus: motherVitalStatus!
    monthlyExpense: Float!
    motherjob: [ID]
    orphans: [ID]
  ): Mother!

  createOfficialDocuments(
    photoPortraitUrl: String!
    photoLongUrl: String!
    birthCertificateUrl: String!
    orphan: ID
  ): OfficialDocuments!

  createDonor(
    companyName: String
    initialReportPreparationDate: DateTime
    finalReportPreparationDate: DateTime
    initialDataCollectionDate: DateTime
    finalDataCollectionDate: DateTime
    reportDueDate: DateTime
    sponsoredgroups: [ID]
  ): Donor!

  createSocialWorker(
    fullName: String!
    phoneNumber: String!
    email: String!
    sponsoredgroup: ID
  ): SocialWorker!

  createSite(
    registrationDate: DateTime!
    siteName: String!
    state: String!
    zone: String!
    district: String!
    kebele: String
    orphans: [ID]
    sponsoredgroup: [ID]
  ): Site!

  createSponsoredGroup(
    sponsorshipDate: DateTime!
    donor: ID
    support: ID
    socialworkers: [ID]
    orphans: [ID]
  ): SponsoredGroup!

  createSupport(
    status: String!
    sponsoredgroup: ID
  ): Support!

  # createFinalcialSupport(
  #   financialSupport: FinancialSupportInput!
  # ): FinancialSupport!

  # createEducationalSupport(
  #   educationalSupport: EducationalSupportInput!
  # ): EducationalSupport!

  # createOtherSupport(
  #   otherSupport: OtherSupportInput!
  # ): OtherSupport!
}

type Iga_property {
  id: ID!
  created_at: DateTime
  updated_at: DateTime
  ownershipStatus: String!
  otherProperty: String
  orphan: Orphan
}

type Education {
  id: ID!
  created_at: DateTime
  updated_at: DateTime
  enrollmentStatus: educationEnrollmentStatus!
  schoolName: String
  typeOfSchool: educationTypeOfSchool
  year: String
  level: educationLevel
  reason: String
  orphan: Orphan
}

type Father {
  id: ID!
  created_at: DateTime
  updated_at: DateTime
  dateOfDeath: DateTime
  causeOfDeath: String
  job: String
  monthlyIncome: Int
  dateOfBirth: DateTime
  deathCertificateUrl: String!
  orphans: [Orphan]
}

type SocialWorker {
  id: ID!
  created_at: DateTime
  updated_at: DateTime
  fullName: String!
  phoneNumber: String!
  email: String!
  sponsoredgroup: SponsoredGroup
}

type Donor {
  id: ID!
  created_at: DateTime
  updated_at: DateTime
  companyName: String
  initialReportPreparationDate: DateTime
  finalReportPreparationDate: DateTime
  initialDataCollectionDate: DateTime
  finalDataCollectionDate: DateTime
  reportDueDate: DateTime
  sponsoredgroups: [SponsoredGroup]
}

type EducationalSupport {
  id: ID!
  created_at: DateTime
  updated_at: DateTime
  support: Support
}

type FinancialSupport {
  id: ID!
  created_at: DateTime
  updated_at: DateTime
  support: Support
}

type OtherSupport {
  id: ID!
  created_at: DateTime
  updated_at: DateTime
  support: Support
}

type Support {
  id: ID!
  created_at: DateTime
  updated_at: DateTime
  status: String!
  educationalsupport: EducationalSupport
  financialsupport: FinancialSupport
  othersupport: OtherSupport
  sponsoredgroup: SponsoredGroup
}

type Site { 
  id: ID!
  created_at: DateTime
  updated_at: DateTime
  registrationDate: DateTime!
  siteName: String!
  state: String!
  zone: String!
  district: String!
  kebele: String!
  orphans: [Orphan]
  sponsoredgroups: [SponsoredGroup]
}

type SponsoredGroup {
  id: ID!
  created_at: DateTime
  updated_at: DateTime
  sponsorshipDate: DateTime!
  donor: Donor
  socialworkers: [SocialWorker]
  support: Support
  orphans: [Orphan]
}

type OfficialDocuments {
  id: ID!
  created_at: DateTime
  updated_at: DateTime
  photoPortraitUrl: String!
  photoLongUrl: String!
  birthCertificateUrl: String!
  orphan: Orphan
}

type Guardian {
  id: ID!
  created_at: DateTime
  updated_at: DateTime
  firstName: String!
  middleName: String!
  lastName: String!
  gender: guardianGender! 
  nationality: String!
  state: String!
  zone: String!
  district: String!
  kebele: String!
  relationToOrphan: guardianRelationToOrphan!
  telephone: String
  mobile: String!
  POBox: String
  email: String!
  job: String
  dateOfBirth: DateTime!
  monthlyExpense: Float!
  guardianIDCardUrl: String! 
  guardianConfirmationLetterUrl: String! 
  orphans: [Orphan]
}

type MotherJob {
  id: ID!
  created_at: DateTime
  updated_at: DateTime
  currentJobTitle: String
  monthlyIncome: String
  initDate: DateTime # TODO:DONE add to mutation and resolvers and UI
  termDate: DateTime # TODO:DONE add to mutation and resolvers and UI
  mother: Mother
}

type Mother {
  id: ID!
  created_at: DateTime
  updated_at: DateTime
  firstName: String!
  middleName: String!
  lastName: String!
  dateOfBirth: DateTime!
  dateOfDeath: DateTime
  causeOfDeath: String
  phoneNumber: String!
  maritalStatus: motherMaritalStatus!
  vitalStatus: motherVitalStatus!
  monthlyExpense: Float!
  motherjob: [MotherJob]
  orphans: [Orphan]
}

type Sibling {
  id: ID!
  created_at: DateTime
  updated_at: DateTime
  fullName: String!
  gender: String!
  age: Int!
  schoolGrade: String
  job: String
  maritalStatus: String
  orphan: Orphan
}

type Orphan {
  id: ID!
  created_at: DateTime
  updated_at: DateTime
  firstName: String!
  fatherName: String!
  grandFatherName: String!
  greatGrandFatherName: String!
  gender: orphanGender!
  placeOfBirth: String!
  dateOfBirth: DateTime!
  clan: String
  spokenLanguages: String
  numberOfSponserdSiblings: Int!
  physicalHealthStatus: String!
  psychologicalHealthStatus: String!
  otherHealthIssues: String!
  hobbies: String
  sponsorshipStatus: orphanSponsorshipStatus
  sponsoredDate: DateTime
  iga_property: Iga_property
  officialdocuments: OfficialDocuments
  education: Education
  father: Father
  guardian: Guardian
  mother: Mother
  donor: Donor
  site: Site
  sponsoredgroup: SponsoredGroup
  siblings: [Sibling]
}

enum orphanGender {
  M
  F
}

enum orphanSponsorshipStatus {
  inProgress
  active
  suspended
  graduated
}

enum guardianGender {
  M
  F
}

enum guardianRelationToOrphan {
  mother
  grandMother
  grandFather
  sister
  brother
  uncle
  aunt
  cousin
  niece
  nephew
}

enum motherMaritalStatus {
  remarried
  widow
  N_A 
}

enum motherVitalStatus {
  alive
  passed
}

enum educationEnrollmentStatus {
  enrolled
  unenrolled
  droppedout
}

enum educationTypeOfSchool {
  private
  public
  N_A
}

enum educationLevel {
  preSchool
  gradeSchool
  underGraduate
  postGraduate
  N_A
}

